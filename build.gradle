plugins {
    id 'java'
    id 'application'

    // javafx -- UI
    id 'org.openjfx.javafxplugin' version '0.0.8'

    // jacoco -- code coverage
    id 'jacoco'
}

javafx {
    version = "14"
    modules = ['javafx.controls', 'javafx.fxml']
}

repositories {
    jcenter()
}

dependencies {

    /// javafx -- UI
    implementation 'org.openjfx:javafx-controls:14'
    implementation 'org.openjfx:javafx-base:14'
    implementation 'org.openjfx:javafx-graphics:14'
    implementation 'org.openjfx:javafx-fxml:14'

    runtimeOnly "org.openjfx:javafx-controls:$javafx.version:win"
    runtimeOnly "org.openjfx:javafx-controls:$javafx.version:linux"
    runtimeOnly "org.openjfx:javafx-controls:$javafx.version:mac"

    runtimeOnly "org.openjfx:javafx-base:$javafx.version:win"
    runtimeOnly "org.openjfx:javafx-base:$javafx.version:linux"
    runtimeOnly "org.openjfx:javafx-base:$javafx.version:mac"

    runtimeOnly "org.openjfx:javafx-graphics:$javafx.version:win"
    runtimeOnly "org.openjfx:javafx-graphics:$javafx.version:linux"
    runtimeOnly "org.openjfx:javafx-graphics:$javafx.version:mac"

    runtimeOnly "org.openjfx:javafx-fxml:$javafx.version:win"
    runtimeOnly "org.openjfx:javafx-fxml:$javafx.version:linux"
    runtimeOnly "org.openjfx:javafx-fxml:$javafx.version:mac"

    /// controlsfx -- UI controls
    implementation 'org.controlsfx:controlsfx:11.0.1'

    /// neo4j -- DB
    implementation 'org.neo4j:neo4j:4.0.3'

    /// event bus
    implementation 'org.greenrobot:eventbus:3.2.0'

    /// slf4j -- logging
    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation 'ch.qos.logback:logback-classic:1.2.3'


    /// JUnit Jupiter -- testing
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.0'
}

application {
    mainClassName = 'savvy.Launcher'
    applicationDefaultJvmArgs = [
            "--add-opens=javafx.graphics/com.sun.javafx.css=ALL-UNNAMED"
    ]
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacoco")
    }
}

run {
    jvmArgs = [
            '--add-exports=javafx.base/com.sun.javafx.event=ALL-UNNAMED'
    ]
}

// fixes .bat in windows (the classpath was too long)
startScripts {
    doLast {
        windowsScript.text = windowsScript.text.replaceAll('set CLASSPATH=.*', 'set CLASSPATH=.;%APP_HOME%/lib/*')
    }
}
